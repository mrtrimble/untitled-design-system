@use 'sass:map';
@use '../tokens/tokens' as tokens;
@use '../features' as features;

@layer components {
  *.no-js:has(.accordion) {
    --accordion-display: block;
  }

  .accordion {
    @layer defaults {
      --_header-padding-x: var(--accordion-header-padding-inline, #{tokens.$accordion-header-padding-inline});
      --_header-padding-y: var(--accordion-header-padding-block, #{tokens.$accordion-header-padding-block});
      --_header-background-color: var(--accordion-header-background-color, #{tokens.$accordion-header-background-color});
      --_header-text-color: var(--accordion-header-text-color, #{tokens.$accordion-header-text-color});

      --_content-padding-x: var(--accordion-content-padding-inline, #{tokens.$accordion-content-padding-inline});
      --_content-padding-y: var(--accordion-content-padding-block, #{tokens.$accordion-content-padding-block});

      --_background-color: var(--accordion-background-color, #{tokens.$accordion-background-color});
      --_text-color: var(--accordion-text-color, #{tokens.$accordion-text-color});
      --_flow-space: var(--accordion-flow-space, #{tokens.$accordion-flow-space});

      --_display: var(--accordion-display, none);
      --_width: var(--accordion-width, 100%);
    }

    @layer rules {
      background-color: var(--_background-color);
      color: var(--_text-color);
      width: var(--_width);

      @if (map.get(features.$FLAGS, 'SCOPE_SUPPORTED') == false) {
        .header,
        summary {
          cursor: pointer;
          background-color: var(--_header-background-color);
          color: var(--_header-text-color);
          padding-inline: var(--_header-padding-x);
          padding-block: var(--_header-padding-y);
          transition: background 0.2s ease;
          &:has(.marker) {
            &::-webkit-details-marker {
              display: none;
            }
          }
          &::-webkit-details-marker {
            order: 2;
          }
          &:focus {
            outline-color: var(--_accent-color);
          }
        }

        .content,
        > *:not(summary) {
          padding-block-start: var(--_flow-space);
          padding-inline: var(--_content-padding-x);

          &:last-child {
            padding-block-end: var(--_flow-space);
          }
        }

        .content {
          display: var(--_display);
        }

        .marker {
          transform: rotate(0);
          transition: transform 0.2s ease;
          transform-origin: center center;
        }
      }
    }

    @layer states {
      &:hover,
      &[open],
      &.open {
        --accordion-header-background-color: #{tokens.$grayscale-light};
      }

      &[open],
      &.open {
        --accordion-display: block;

        .marker {
          transform: rotate(90deg);
        }
      }

      &:focus {
        .content,
        > *:not(summary) {
          outline-color: var(--_accent-color);
        }
      }
    }

    @layer themes {
      @media (prefers-color-scheme: dark) {
        --accordion-header-background-color: #{tokens.$grayscale-dark};
        --accordion-header-text-color: #{tokens.$color-inverse-base};
        --accordion-background-color: #{tokens.$grayscale-dark};
        --accordion-text-color: #{tokens.$color-inverse-base};

        &[open],
        &:hover,
        &.open {
          --accordion-header-background-color: #{tokens.$grayscale-black};
        }
      }
    }
  }

  @if (map.get(features.$FLAGS, 'SCOPE_SUPPORTED')) {
    @scope (.accordion) {
      .header,
      summary {
        cursor: pointer;
        background-color: var(--_header-background-color);
        color: var(--_header-text-color);
        padding-inline: var(--_header-padding-x);
        padding-block: var(--_header-padding-y);
        transition: background 0.2s ease;
      }

      .content,
      *:has(.header) {
        padding-block-start: var(--_flow-space);
        padding-inline: var(--_content-padding-x);

        &:last-child {
          padding-block-end: var(--_flow-space);
        }
      }

      .content {
        display: var(--_display);
      }

      .marker {
        transform: rotate(0);
        transition: transform 0.2s ease;
        transform-origin: center center;
      }
    }
  }
}
