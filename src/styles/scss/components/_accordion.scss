@use 'sass:meta';
@use 'sass:map';
@use '../tokens/tokens';

$TOKENS: meta.module-variables('tokens');

@layer components {
  *:has(> .accordion) {
    --container-name: accordion;
  }

  body.no-js {
    --accordion-display: block;
  }

  .accordion {
    --_header-padding-x: var(--accordion-header-padding-inline, #{map.get($TOKENS, accordion-header-padding-inline)});
    --_header-padding-y: var(--accordion-header-padding-block, #{map.get($TOKENS, accordion-header-padding-block)});
    --_header-background-color: var(--accordion-header-background-color, #{map.get($TOKENS, accordion-header-background-color)});
    --_header-text-color: var(--accordion-header-text-color, #{map.get($TOKENS, accordion-header-text-color)});

    --_content-padding-x: var(--accordion-content-padding-inline, #{map.get($TOKENS, accordion-content-padding-inline)});
    --_content-padding-y: var(--accordion-content-padding-block, #{map.get($TOKENS, accordion-content-padding-block)});

    --_background-color: var(--accordion-background-color, #{map.get($TOKENS, accordion-background-color)});
    --_text-color: var(--accordion-text-color, #{map.get($TOKENS, accordion-text-color)});
    --_flow-space: var(--accordion-flow-space, #{map.get($TOKENS, accordion-flow-space)});

    --_display: var(--accordion-display, none);
    --_width: var(--accordion-width, 100%);

    @layer rules {
      background-color: var(--_background-color);
      color: var(--_text-color);
      width: var(--_width);

      .accordion-header,
      summary {
        cursor: pointer;
        background-color: var(--_header-background-color);
        color: var(--_header-text-color);
        padding-inline: var(--_header-padding-x);
        padding-block: var(--_header-padding-y);
        transition: background 0.2s ease;
      }

      .accordion-content,
      > *:not(summary) {
        padding-block-start: var(--_flow-space);
        padding-inline: var(--_content-padding-x);

        &:last-child {
          padding-block-end: var(--_flow-space);
        }
      }

      .accordion-content {
        display: var(--_display);
      }

      .marker {
        transform: rotate(0);
        transition: transform 0.2s ease;
        transform-origin: center center;
      }
    }

    @layer states {
      &:hover,
      &[open],
      &.open {
        --accordion-header-background-color: var(--grayscale-light);

      }
      
      &[open],
      &.open {
        --accordion-display: block;

        .marker {
          transform: rotate(90deg);
        }
      }
    }

    @layer themes {
      @media (prefers-color-scheme: dark) {
        --accordion-header-background-color: var(--grayscale-dark);
        --accordion-header-text-color: var(--grayscale-white);
        --accordion-background-color: var(--grayscale-dark);
        --accordion-text-color: var(--grayscale-white);

        &[open],
        &:hover,
        &.open {
          --accordion-header-background-color: var(--grayscale-black);
        }
      }
    }
  }
}
