@use 'sass:meta';
@use 'sass:map';
@use '../tokens/tokens' as tokens;

$MESSAGE: (
  STATES: ('default', 'info', 'warning', 'success', 'error')
) !default;


@layer components {
  .message {
    --_color: var(--message-color, #{tokens.$message-color});
    --_background-color: var(--message-background-color, #{tokens.$message-background-color});
    --_padding-inline: var(--message-padding-inline, #{tokens.$message-padding-inline});
    --_padding-block: var(--message-padding-block, #{tokens.$message-padding-block});
    --_border-color: var(--message-border-color, #{tokens.$message-border-color});
    --_border-style: var(--message-border-style, #{tokens.$message-border-style});
    --_border-width: var(--message-border-width, #{tokens.$message-border-width});

    @layer rules {
      color: var(--_color);
      background: color-mix(in lab, var(--_background-color), #{tokens.$grayscale-white} 70%);
      padding-inline: var(--_padding-inline);
      padding-block: var(--_padding-block);
      border-left: var(--_border-width) var(--_border-color) var(--_border-style);
    }

    @layer states {
      @each $state in map.get($MESSAGE, STATES) {
        &.#{$state} {
          --message-color: #{tokens.$color-base};
          // --message-border-color: #{map.get(meta.module-variables('tokens'), 'message-' + $state)};
          --message-background-color: #{map.get(meta.module-variables('tokens'), 'message-' + $state)};
        }
      }
    }

    @layer themes {
      @media (prefers-color-scheme: dark) {
        @each $state in map.get($MESSAGE, STATES) {
          &.#{$state} {
            --message-color: #{tokens.$grayscale-white};
            --message-border-color: transparent;
            
            background-color: #{map.get(meta.module-variables('tokens'), 'message-' + $state)};
          }
        }
      }
    }
  }
}
