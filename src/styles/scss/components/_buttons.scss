@use '../tokens/tokens' as tokens;

@layer components {
  button:not(.tab),
  .button {
    --_background-color: var(--button-background-color, #{tokens.$button-background-color});
    --_border-color: var(--button-border-color, #{tokens.$button-border-color});
    --_border-width: var(--button-border-width, #{tokens.$button-border-width});
    --_border-style: var(--button-border-style, #{tokens.$button-border-style});
    --_border-radius: var(--button-border-radius, #{tokens.$button-border-radius});
    --_font-size: var(--button-font-size, #{tokens.$button-font-size});
    --_text-color: var(--button-text-color, #{tokens.$color-inverse-base});
    --_outline-color: var(--button-outline-color, #{tokens.$button-outline-color});
    --_outline-style: var(--button-outline-style, #{tokens.$button-outline-style});
    --_outline-width: var(--button-outline-width, #{tokens.$button-outline-width});
    --_outline-offset: var(--button-outline-offset, #{tokens.$button-outline-offset});
    --_padding-inline: var(--button-padding-inline, #{tokens.$button-padding-inline});
    --_padding-block: var(--button-padding-block, #{tokens.$button-padding-block});
    --_text-decoration: var(--button-text-decoration, #{tokens.$button-text-decoration});
    --_width: var(--button-width, #{tokens.$button-width});

    @layer rules {
      background: var(--_background-color);
      border-color: color-mix(in srgb, var(--_border-color), var(--grayscale-black) 12%);
      border-radius: var(--_border-radius);
      border-style: var(--_border-style);
      border-width: var(--_border-width);
      color: var(--_text-color);
      display: inline-grid;
      font-size: var(--_font-size);
      padding-block: var(--_padding-block);
      padding-inline: var(--_padding-inline);
      place-content: center;
      text-decoration: var(--_text-decoration);
      transition-duration: 0.2s;
      transition-property: background, outline, color;
      transition-timing-function: ease;
      outline: var(--_outline-width) var(--_outline-style) var(--_outline-color);
      outline-offset: var(--_outline-offset);
      text-align: center;
      width: var(--_width);
      box-shadow: inset 0 -2px 2px color-mix(in srgb, var(--_background-color), var(--grayscale-dark) 12%),
        inset 0 2px 2px color-mix(in srgb, var(--_background-color), var(--grayscale-white) 18%);
    }

    @layer modifiers {
      &.secondary {
        --button-background-color: #{tokens.$grayscale-white};
        --button-border-color: #{tokens.$grayscale-light};
        --button-text-color: #{tokens.$color-base};
        --button-border-width: 1px;

        &:hover {
          --button-background-color: #{tokens.$grayscale-lighter};
        }

        &:active,
        &:focus-visible {
          --button-outline-color: var(--_accent-color);
        }
      }
      &.plain {
        --button-background-color: transparent;
        --button-border-color: transparent;
        --button-text-decoration: underline;
        --button-text-color: #{tokens.$color-base};
        --button-padding-inline: none;
        --button-padding-block: none;

        border-color: var(--button-border-color);
        box-shadow: none;
        &:active,
        &:focus,
        &:focus-visible {
          --button-outline-color: var(--_accent-color);
          --button-text-color: #{tokens.$color-base};
        }
      }
    }

    @layer states {
      &:hover {
        --button-background-color: #{tokens.$color-lightorange};
      }

      &:active,
      &:focus-visible {
        --button-outline-color: var(--_accent-color);
      }
    }

    @layer themes {
      @media (prefers-color-scheme: dark) {
        &.plain {
          --button-text-color: #{tokens.$color-inverse-base};
          &:active,
          &:focus,
          &:focus-visible {
            --button-outline-color: var(--_accent-color);
            --button-text-color: #{tokens.$color-inverse-base};
          }
        }
      }
    }
  }
}
