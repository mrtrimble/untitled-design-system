@use 'sass:meta';
@use 'sass:map';
@use '../tokens/tokens';

$TOKENS: meta.module-variables('tokens');

@layer components {
  body.no-js {
    --tabs-display: block;
    --tab-list-display: none;
    --tab-panel-display: block;
  }

  .tabs {
    --_display: var(--tabs-display, grid);
    @layer rules {
      display: var(--_display);
      grid-template-areas:
        'tab-list'
        'tab-panel';
    }
  }

  :is(.tab-list, [role='tablist']) {
    --_min: var(--tab-list-column-min, #{map.get($TOKENS, tab-list-column-min)});
    --_display: var(--tab-list-display, #{map.get($TOKENS, tab-list-display)});

    @layer rules {
      grid-area: tab-list;
      display: var(--_display);
      text-align: center;
      grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--_min)), 1fr));
    }

    @layer states {
      @media (min-width: 640px) {
        --tab-list-column-min: 10ch;
      }
    }
  }

  :is(button.tab, [role='tab']) {
    --_background-color: var(--tab-background-color, #{map.get($TOKENS, tab-background-color)});
    --_border-color: var(--tab-border-color, #{map.get($TOKENS, tab-border-color)});
    --_border-width: var(--tab-border-width, #{map.get($TOKENS, tab-border-width)});
    --_border-style: var(--tab-border-style, #{map.get($TOKENS, tab-border-style)});
    --_text-color: var(--tab-text-color, #{map.get($TOKENS, tab-text-color)});
    --_padding-inline: var(--tab-padding-inline, #{map.get($TOKENS, tab-padding-inline)});
    --_padding-block: var(--tab-padding-block, #{map.get($TOKENS, tab-padding-block)});

    @layer rules {
      background-color: var(--_background-color);
      color: var(--_text-color);
      padding-inline: var(--_padding-inline);
      padding-block: var(--_padding-block);
      border-top: var(--_border-width) var(--_border-style) var(--_border-color);
    }

    @layer states {
      &.active,
      [aria-selected='true'],
      &:active {
        --tab-background-color: var(--swatch-navy);
        --tab-text-color: var(--grayscale-white);
      }

      @media (min-width: 640px) {
        --tab-background-color: transparent;

        &.active,
        [aria-selected='true'],
        &:active {
          --tab-background-color: var(--grayscale-lighter);
          --tab-border-color: var(--swatch-navy);
          --tab-text-color: currentcolor;
        }

        &:hover {
          --tab-background-color: var(--grayscale-lighter);
        }
      }
    }

    @layer themes {
      @media (prefers-color-scheme: dark) {
        --tab-background-color: var(--grayscale-dark);

        &.active,
        [aria-selected='true'],
        &:active {
          --tab-background-color: var(--grayscale-black);
        }

        &:hover {
          --tab-background-color: var(--grayscale-black);
        }

        @media (min-width: 640px) {
          --tab-background-color: transparent;

          &.active,
          [aria-selected='true'],
          &:active {
            --tab-background-color: var(--grayscale-dark);
          }
        }
      }
    }
  }

  :is(.tab-panel, [role='tabpanel']) {
    --_background-color: var(--tab-panel-background-color, #{map.get($TOKENS, tab-panel-background-color)});
    --_display: var(--tab-panel-display, #{map.get($TOKENS, tab-panel-display)});
    --_flow-space: var(--tab-panel-flow-space, #{map.get($TOKENS, tab-panel-flow-space)});
    --_padding-inline: var(--tab-panel-padding-inline, #{map.get($TOKENS, tab-panel-padding-inline)});
    --_padding-block: var(--tab-panel-padding-block, #{map.get($TOKENS, tab-panel-padding-block)});

    @layer rules {
      grid-area: tab-panel;
      display: var(--_display);
      background-color: var(--_background-color);
      padding-inline: var(--_padding-inline);
      padding-block: var(--_padding-block);

      > * + * {
        margin-block-start: var(--_flow-space);
      }
    }

    @layer states {
      &.open {
        --tab-panel-display: block;
      }
    }

    @layer themes {
      @media (prefers-color-scheme: dark) {
        --tab-panel-background-color: var(--grayscale-dark);
      }
    }
  }
}
