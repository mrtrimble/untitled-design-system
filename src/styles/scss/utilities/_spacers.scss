@use 'sass:meta';
@use 'sass:map';
@use 'sass:string';
@use '../tokens/tokens' as tokens;
@use '../functions' as functions;

$SPACER_PREFIX: 'utility-spacer' !default;
$SPACER_TOKENS: functions.getList(meta.module-variables('tokens'), $SPACER_PREFIX);

$SPACER_TYPES: (
  'p': 'padding',
  'm': 'margin',
);

@layer utilities {
  @each $spacer in $SPACER_TOKENS {
    @each $prefix, $spacerProperty in $SPACER_TYPES {
      .#{$prefix}-#{$spacer} {
        #{$spacerProperty}: #{map.get(meta.module-variables('tokens'), $spacer)};
      }

      $directions: (
        'x': 'inline',
        'y': 'block',
        'x-start': 'inline-start',
        'x-end': 'inline-end',
        'y-start': 'block-start',
        'y-end': 'block-end',
      );

      @each $direction, $directionProperty in $directions {
        .#{$prefix}#{$direction}-#{$spacer} {
          #{$spacerProperty}-#{$directionProperty}: #{map.get(meta.module-variables('tokens'), $spacer)};
        }
      }
    }
  }
}

@layer theme {
  :root {
    @each $spacer in $SPACER_TOKENS {
      @each $prefix, $spacerProperty in $SPACER_TYPES {
        // @debug $spacer map.get(meta.module-variables('tokens'), $spacer);
        --#{$spacer}: #{map.get(meta.module-variables('tokens'), $spacer)};
      }
    }
  }
}
