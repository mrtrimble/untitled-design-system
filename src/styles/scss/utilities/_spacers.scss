@use 'sass:meta';
@use 'sass:map';
@use 'sass:string';
@use 'sass:list';
@use '../tokens/tokens' as tokens;
@use '../functions' as functions;

$SPACER: (
  PREFIX: 'util-spacer',
  // TODO: Figure out how to use the PREFIX map property instead of hard coding the prefix
  TOKENS: functions.getList(meta.module-variables('tokens'), 'util-spacer'),
  TYPES: (
    'p': 'padding',
    'm': 'margin',
  ),
  DIRECTIONS: (
    'x': 'inline',
    'y': 'block',
    'l': 'inline-start',
    'r': 'inline-end',
    't': 'block-start',
    'b': 'block-end',
  ),
) !default;

@layer utilities {
  @each $spacer in map.get($SPACER, TOKENS) {
    @each $prefix, $spacerProperty in map.get($SPACER, TYPES) {
      .#{$prefix + list.nth(string.split($spacer, map.get($SPACER, PREFIX)), 2)} {
        #{$spacerProperty}: #{map.get(meta.module-variables('tokens'), $spacer)};
      }

      @each $direction, $directionProperty in map.get($SPACER, DIRECTIONS) {
        .#{$prefix + $direction + list.nth(string.split($spacer, map.get($SPACER, PREFIX)), 2)} {
          #{$spacerProperty}-#{$directionProperty}: #{map.get(meta.module-variables('tokens'), $spacer)};
        }
      }
    }
  }
}

@layer themes {
  :root {
    @each $spacer in map.get($SPACER, TOKENS) {
      --#{$spacer}: #{map.get(meta.module-variables('tokens'), $spacer)};
    }
  }
}
